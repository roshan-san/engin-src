/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as IndexImport } from './routes/index'
import { Route as ProtectedVoteArenaImport } from './routes/_protected/vote-arena'
import { Route as ProtectedNetworkImport } from './routes/_protected/network'
import { Route as ProtectedMyStartupsImport } from './routes/_protected/my-startups'
import { Route as ProtectedMessageImport } from './routes/_protected/message'
import { Route as ProtectedHomeImport } from './routes/_protected/home'
import { Route as ProtectedCrowdfundingImport } from './routes/_protected/crowdfunding'
import { Route as ProtectedCreatePostImport } from './routes/_protected/create-post'
import { Route as ProtectedStartupsIndexImport } from './routes/_protected/startups.index'
import { Route as ProtectedMessageIndexImport } from './routes/_protected/message.index'
import { Route as ProtectedStartupsStartupidImport } from './routes/_protected/startups.$startupid'
import { Route as ProtectedProfileUsernameImport } from './routes/_protected/profile.$username'
import { Route as ProtectedMessageUsernameImport } from './routes/_protected/message.$username'

// Create/Update Routes

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedVoteArenaRoute = ProtectedVoteArenaImport.update({
  id: '/vote-arena',
  path: '/vote-arena',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedNetworkRoute = ProtectedNetworkImport.update({
  id: '/network',
  path: '/network',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedMyStartupsRoute = ProtectedMyStartupsImport.update({
  id: '/my-startups',
  path: '/my-startups',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedMessageRoute = ProtectedMessageImport.update({
  id: '/message',
  path: '/message',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedHomeRoute = ProtectedHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedCrowdfundingRoute = ProtectedCrowdfundingImport.update({
  id: '/crowdfunding',
  path: '/crowdfunding',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedCreatePostRoute = ProtectedCreatePostImport.update({
  id: '/create-post',
  path: '/create-post',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedStartupsIndexRoute = ProtectedStartupsIndexImport.update({
  id: '/startups/',
  path: '/startups/',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedMessageIndexRoute = ProtectedMessageIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedMessageRoute,
} as any)

const ProtectedStartupsStartupidRoute = ProtectedStartupsStartupidImport.update(
  {
    id: '/startups/$startupid',
    path: '/startups/$startupid',
    getParentRoute: () => ProtectedRoute,
  } as any,
)

const ProtectedProfileUsernameRoute = ProtectedProfileUsernameImport.update({
  id: '/profile/$username',
  path: '/profile/$username',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedMessageUsernameRoute = ProtectedMessageUsernameImport.update({
  id: '/$username',
  path: '/$username',
  getParentRoute: () => ProtectedMessageRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/_protected/create-post': {
      id: '/_protected/create-post'
      path: '/create-post'
      fullPath: '/create-post'
      preLoaderRoute: typeof ProtectedCreatePostImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/crowdfunding': {
      id: '/_protected/crowdfunding'
      path: '/crowdfunding'
      fullPath: '/crowdfunding'
      preLoaderRoute: typeof ProtectedCrowdfundingImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/home': {
      id: '/_protected/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof ProtectedHomeImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/message': {
      id: '/_protected/message'
      path: '/message'
      fullPath: '/message'
      preLoaderRoute: typeof ProtectedMessageImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/my-startups': {
      id: '/_protected/my-startups'
      path: '/my-startups'
      fullPath: '/my-startups'
      preLoaderRoute: typeof ProtectedMyStartupsImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/network': {
      id: '/_protected/network'
      path: '/network'
      fullPath: '/network'
      preLoaderRoute: typeof ProtectedNetworkImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/vote-arena': {
      id: '/_protected/vote-arena'
      path: '/vote-arena'
      fullPath: '/vote-arena'
      preLoaderRoute: typeof ProtectedVoteArenaImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/message/$username': {
      id: '/_protected/message/$username'
      path: '/$username'
      fullPath: '/message/$username'
      preLoaderRoute: typeof ProtectedMessageUsernameImport
      parentRoute: typeof ProtectedMessageImport
    }
    '/_protected/profile/$username': {
      id: '/_protected/profile/$username'
      path: '/profile/$username'
      fullPath: '/profile/$username'
      preLoaderRoute: typeof ProtectedProfileUsernameImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/startups/$startupid': {
      id: '/_protected/startups/$startupid'
      path: '/startups/$startupid'
      fullPath: '/startups/$startupid'
      preLoaderRoute: typeof ProtectedStartupsStartupidImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/message/': {
      id: '/_protected/message/'
      path: '/'
      fullPath: '/message/'
      preLoaderRoute: typeof ProtectedMessageIndexImport
      parentRoute: typeof ProtectedMessageImport
    }
    '/_protected/startups/': {
      id: '/_protected/startups/'
      path: '/startups'
      fullPath: '/startups'
      preLoaderRoute: typeof ProtectedStartupsIndexImport
      parentRoute: typeof ProtectedImport
    }
  }
}

// Create and export the route tree

interface ProtectedMessageRouteChildren {
  ProtectedMessageUsernameRoute: typeof ProtectedMessageUsernameRoute
  ProtectedMessageIndexRoute: typeof ProtectedMessageIndexRoute
}

const ProtectedMessageRouteChildren: ProtectedMessageRouteChildren = {
  ProtectedMessageUsernameRoute: ProtectedMessageUsernameRoute,
  ProtectedMessageIndexRoute: ProtectedMessageIndexRoute,
}

const ProtectedMessageRouteWithChildren =
  ProtectedMessageRoute._addFileChildren(ProtectedMessageRouteChildren)

interface ProtectedRouteChildren {
  ProtectedCreatePostRoute: typeof ProtectedCreatePostRoute
  ProtectedCrowdfundingRoute: typeof ProtectedCrowdfundingRoute
  ProtectedHomeRoute: typeof ProtectedHomeRoute
  ProtectedMessageRoute: typeof ProtectedMessageRouteWithChildren
  ProtectedMyStartupsRoute: typeof ProtectedMyStartupsRoute
  ProtectedNetworkRoute: typeof ProtectedNetworkRoute
  ProtectedVoteArenaRoute: typeof ProtectedVoteArenaRoute
  ProtectedProfileUsernameRoute: typeof ProtectedProfileUsernameRoute
  ProtectedStartupsStartupidRoute: typeof ProtectedStartupsStartupidRoute
  ProtectedStartupsIndexRoute: typeof ProtectedStartupsIndexRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedCreatePostRoute: ProtectedCreatePostRoute,
  ProtectedCrowdfundingRoute: ProtectedCrowdfundingRoute,
  ProtectedHomeRoute: ProtectedHomeRoute,
  ProtectedMessageRoute: ProtectedMessageRouteWithChildren,
  ProtectedMyStartupsRoute: ProtectedMyStartupsRoute,
  ProtectedNetworkRoute: ProtectedNetworkRoute,
  ProtectedVoteArenaRoute: ProtectedVoteArenaRoute,
  ProtectedProfileUsernameRoute: ProtectedProfileUsernameRoute,
  ProtectedStartupsStartupidRoute: ProtectedStartupsStartupidRoute,
  ProtectedStartupsIndexRoute: ProtectedStartupsIndexRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof ProtectedRouteWithChildren
  '/create-post': typeof ProtectedCreatePostRoute
  '/crowdfunding': typeof ProtectedCrowdfundingRoute
  '/home': typeof ProtectedHomeRoute
  '/message': typeof ProtectedMessageRouteWithChildren
  '/my-startups': typeof ProtectedMyStartupsRoute
  '/network': typeof ProtectedNetworkRoute
  '/vote-arena': typeof ProtectedVoteArenaRoute
  '/message/$username': typeof ProtectedMessageUsernameRoute
  '/profile/$username': typeof ProtectedProfileUsernameRoute
  '/startups/$startupid': typeof ProtectedStartupsStartupidRoute
  '/message/': typeof ProtectedMessageIndexRoute
  '/startups': typeof ProtectedStartupsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof ProtectedRouteWithChildren
  '/create-post': typeof ProtectedCreatePostRoute
  '/crowdfunding': typeof ProtectedCrowdfundingRoute
  '/home': typeof ProtectedHomeRoute
  '/my-startups': typeof ProtectedMyStartupsRoute
  '/network': typeof ProtectedNetworkRoute
  '/vote-arena': typeof ProtectedVoteArenaRoute
  '/message/$username': typeof ProtectedMessageUsernameRoute
  '/profile/$username': typeof ProtectedProfileUsernameRoute
  '/startups/$startupid': typeof ProtectedStartupsStartupidRoute
  '/message': typeof ProtectedMessageIndexRoute
  '/startups': typeof ProtectedStartupsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_protected': typeof ProtectedRouteWithChildren
  '/_protected/create-post': typeof ProtectedCreatePostRoute
  '/_protected/crowdfunding': typeof ProtectedCrowdfundingRoute
  '/_protected/home': typeof ProtectedHomeRoute
  '/_protected/message': typeof ProtectedMessageRouteWithChildren
  '/_protected/my-startups': typeof ProtectedMyStartupsRoute
  '/_protected/network': typeof ProtectedNetworkRoute
  '/_protected/vote-arena': typeof ProtectedVoteArenaRoute
  '/_protected/message/$username': typeof ProtectedMessageUsernameRoute
  '/_protected/profile/$username': typeof ProtectedProfileUsernameRoute
  '/_protected/startups/$startupid': typeof ProtectedStartupsStartupidRoute
  '/_protected/message/': typeof ProtectedMessageIndexRoute
  '/_protected/startups/': typeof ProtectedStartupsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/create-post'
    | '/crowdfunding'
    | '/home'
    | '/message'
    | '/my-startups'
    | '/network'
    | '/vote-arena'
    | '/message/$username'
    | '/profile/$username'
    | '/startups/$startupid'
    | '/message/'
    | '/startups'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/create-post'
    | '/crowdfunding'
    | '/home'
    | '/my-startups'
    | '/network'
    | '/vote-arena'
    | '/message/$username'
    | '/profile/$username'
    | '/startups/$startupid'
    | '/message'
    | '/startups'
  id:
    | '__root__'
    | '/'
    | '/_protected'
    | '/_protected/create-post'
    | '/_protected/crowdfunding'
    | '/_protected/home'
    | '/_protected/message'
    | '/_protected/my-startups'
    | '/_protected/network'
    | '/_protected/vote-arena'
    | '/_protected/message/$username'
    | '/_protected/profile/$username'
    | '/_protected/startups/$startupid'
    | '/_protected/message/'
    | '/_protected/startups/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProtectedRoute: typeof ProtectedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProtectedRoute: ProtectedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_protected"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_protected": {
      "filePath": "_protected.tsx",
      "children": [
        "/_protected/create-post",
        "/_protected/crowdfunding",
        "/_protected/home",
        "/_protected/message",
        "/_protected/my-startups",
        "/_protected/network",
        "/_protected/vote-arena",
        "/_protected/profile/$username",
        "/_protected/startups/$startupid",
        "/_protected/startups/"
      ]
    },
    "/_protected/create-post": {
      "filePath": "_protected/create-post.tsx",
      "parent": "/_protected"
    },
    "/_protected/crowdfunding": {
      "filePath": "_protected/crowdfunding.tsx",
      "parent": "/_protected"
    },
    "/_protected/home": {
      "filePath": "_protected/home.tsx",
      "parent": "/_protected"
    },
    "/_protected/message": {
      "filePath": "_protected/message.tsx",
      "parent": "/_protected",
      "children": [
        "/_protected/message/$username",
        "/_protected/message/"
      ]
    },
    "/_protected/my-startups": {
      "filePath": "_protected/my-startups.tsx",
      "parent": "/_protected"
    },
    "/_protected/network": {
      "filePath": "_protected/network.tsx",
      "parent": "/_protected"
    },
    "/_protected/vote-arena": {
      "filePath": "_protected/vote-arena.tsx",
      "parent": "/_protected"
    },
    "/_protected/message/$username": {
      "filePath": "_protected/message.$username.tsx",
      "parent": "/_protected/message"
    },
    "/_protected/profile/$username": {
      "filePath": "_protected/profile.$username.tsx",
      "parent": "/_protected"
    },
    "/_protected/startups/$startupid": {
      "filePath": "_protected/startups.$startupid.tsx",
      "parent": "/_protected"
    },
    "/_protected/message/": {
      "filePath": "_protected/message.index.tsx",
      "parent": "/_protected/message"
    },
    "/_protected/startups/": {
      "filePath": "_protected/startups.index.tsx",
      "parent": "/_protected"
    }
  }
}
ROUTE_MANIFEST_END */
