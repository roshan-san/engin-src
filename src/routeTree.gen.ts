/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as OnboardImport } from './routes/onboard'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as OnboardingImport } from './routes/_onboarding'
import { Route as IndexImport } from './routes/index'
import { Route as OnboardWorkTypeImport } from './routes/onboard/work-type'
import { Route as OnboardUsernameImport } from './routes/onboard/username'
import { Route as OnboardUserTypeImport } from './routes/onboard/user-type'
import { Route as OnboardSkillsImport } from './routes/onboard/skills'
import { Route as OnboardLocationImport } from './routes/onboard/location'
import { Route as OnboardInterestsImport } from './routes/onboard/interests'
import { Route as OnboardContactImport } from './routes/onboard/contact'
import { Route as ProtectedVoteArenaImport } from './routes/_protected/vote-arena'
import { Route as ProtectedNetworkImport } from './routes/_protected/network'
import { Route as ProtectedMyStartupsImport } from './routes/_protected/my-startups'
import { Route as ProtectedHomeImport } from './routes/_protected/home'
import { Route as ProtectedCrowdfundingImport } from './routes/_protected/crowdfunding'
import { Route as ProtectedCreatePostImport } from './routes/_protected/create-post'
import { Route as ProtectedStartupsIndexImport } from './routes/_protected/startups.index'
import { Route as ProtectedMessageIndexImport } from './routes/_protected/message.index'
import { Route as ProtectedStartupsStartupidImport } from './routes/_protected/startups.$startupid'
import { Route as ProtectedStartupEditStartupidImport } from './routes/_protected/startup-edit.$startupid'
import { Route as ProtectedProfileUsernameImport } from './routes/_protected/profile.$username'
import { Route as ProtectedMessageUsernameImport } from './routes/_protected/message.$username'

// Create/Update Routes

const OnboardRoute = OnboardImport.update({
  id: '/onboard',
  path: '/onboard',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingRoute = OnboardingImport.update({
  id: '/_onboarding',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const OnboardWorkTypeRoute = OnboardWorkTypeImport.update({
  id: '/work-type',
  path: '/work-type',
  getParentRoute: () => OnboardRoute,
} as any)

const OnboardUsernameRoute = OnboardUsernameImport.update({
  id: '/username',
  path: '/username',
  getParentRoute: () => OnboardRoute,
} as any)

const OnboardUserTypeRoute = OnboardUserTypeImport.update({
  id: '/user-type',
  path: '/user-type',
  getParentRoute: () => OnboardRoute,
} as any)

const OnboardSkillsRoute = OnboardSkillsImport.update({
  id: '/skills',
  path: '/skills',
  getParentRoute: () => OnboardRoute,
} as any)

const OnboardLocationRoute = OnboardLocationImport.update({
  id: '/location',
  path: '/location',
  getParentRoute: () => OnboardRoute,
} as any)

const OnboardInterestsRoute = OnboardInterestsImport.update({
  id: '/interests',
  path: '/interests',
  getParentRoute: () => OnboardRoute,
} as any)

const OnboardContactRoute = OnboardContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => OnboardRoute,
} as any)

const ProtectedVoteArenaRoute = ProtectedVoteArenaImport.update({
  id: '/vote-arena',
  path: '/vote-arena',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedNetworkRoute = ProtectedNetworkImport.update({
  id: '/network',
  path: '/network',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedMyStartupsRoute = ProtectedMyStartupsImport.update({
  id: '/my-startups',
  path: '/my-startups',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedHomeRoute = ProtectedHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedCrowdfundingRoute = ProtectedCrowdfundingImport.update({
  id: '/crowdfunding',
  path: '/crowdfunding',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedCreatePostRoute = ProtectedCreatePostImport.update({
  id: '/create-post',
  path: '/create-post',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedStartupsIndexRoute = ProtectedStartupsIndexImport.update({
  id: '/startups/',
  path: '/startups/',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedMessageIndexRoute = ProtectedMessageIndexImport.update({
  id: '/message/',
  path: '/message/',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedStartupsStartupidRoute = ProtectedStartupsStartupidImport.update(
  {
    id: '/startups/$startupid',
    path: '/startups/$startupid',
    getParentRoute: () => ProtectedRoute,
  } as any,
)

const ProtectedStartupEditStartupidRoute =
  ProtectedStartupEditStartupidImport.update({
    id: '/startup-edit/$startupid',
    path: '/startup-edit/$startupid',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedProfileUsernameRoute = ProtectedProfileUsernameImport.update({
  id: '/profile/$username',
  path: '/profile/$username',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedMessageUsernameRoute = ProtectedMessageUsernameImport.update({
  id: '/message/$username',
  path: '/message/$username',
  getParentRoute: () => ProtectedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_onboarding': {
      id: '/_onboarding'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof OnboardingImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/onboard': {
      id: '/onboard'
      path: '/onboard'
      fullPath: '/onboard'
      preLoaderRoute: typeof OnboardImport
      parentRoute: typeof rootRoute
    }
    '/_protected/create-post': {
      id: '/_protected/create-post'
      path: '/create-post'
      fullPath: '/create-post'
      preLoaderRoute: typeof ProtectedCreatePostImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/crowdfunding': {
      id: '/_protected/crowdfunding'
      path: '/crowdfunding'
      fullPath: '/crowdfunding'
      preLoaderRoute: typeof ProtectedCrowdfundingImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/home': {
      id: '/_protected/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof ProtectedHomeImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/my-startups': {
      id: '/_protected/my-startups'
      path: '/my-startups'
      fullPath: '/my-startups'
      preLoaderRoute: typeof ProtectedMyStartupsImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/network': {
      id: '/_protected/network'
      path: '/network'
      fullPath: '/network'
      preLoaderRoute: typeof ProtectedNetworkImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/vote-arena': {
      id: '/_protected/vote-arena'
      path: '/vote-arena'
      fullPath: '/vote-arena'
      preLoaderRoute: typeof ProtectedVoteArenaImport
      parentRoute: typeof ProtectedImport
    }
    '/onboard/contact': {
      id: '/onboard/contact'
      path: '/contact'
      fullPath: '/onboard/contact'
      preLoaderRoute: typeof OnboardContactImport
      parentRoute: typeof OnboardImport
    }
    '/onboard/interests': {
      id: '/onboard/interests'
      path: '/interests'
      fullPath: '/onboard/interests'
      preLoaderRoute: typeof OnboardInterestsImport
      parentRoute: typeof OnboardImport
    }
    '/onboard/location': {
      id: '/onboard/location'
      path: '/location'
      fullPath: '/onboard/location'
      preLoaderRoute: typeof OnboardLocationImport
      parentRoute: typeof OnboardImport
    }
    '/onboard/skills': {
      id: '/onboard/skills'
      path: '/skills'
      fullPath: '/onboard/skills'
      preLoaderRoute: typeof OnboardSkillsImport
      parentRoute: typeof OnboardImport
    }
    '/onboard/user-type': {
      id: '/onboard/user-type'
      path: '/user-type'
      fullPath: '/onboard/user-type'
      preLoaderRoute: typeof OnboardUserTypeImport
      parentRoute: typeof OnboardImport
    }
    '/onboard/username': {
      id: '/onboard/username'
      path: '/username'
      fullPath: '/onboard/username'
      preLoaderRoute: typeof OnboardUsernameImport
      parentRoute: typeof OnboardImport
    }
    '/onboard/work-type': {
      id: '/onboard/work-type'
      path: '/work-type'
      fullPath: '/onboard/work-type'
      preLoaderRoute: typeof OnboardWorkTypeImport
      parentRoute: typeof OnboardImport
    }
    '/_protected/message/$username': {
      id: '/_protected/message/$username'
      path: '/message/$username'
      fullPath: '/message/$username'
      preLoaderRoute: typeof ProtectedMessageUsernameImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/profile/$username': {
      id: '/_protected/profile/$username'
      path: '/profile/$username'
      fullPath: '/profile/$username'
      preLoaderRoute: typeof ProtectedProfileUsernameImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/startup-edit/$startupid': {
      id: '/_protected/startup-edit/$startupid'
      path: '/startup-edit/$startupid'
      fullPath: '/startup-edit/$startupid'
      preLoaderRoute: typeof ProtectedStartupEditStartupidImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/startups/$startupid': {
      id: '/_protected/startups/$startupid'
      path: '/startups/$startupid'
      fullPath: '/startups/$startupid'
      preLoaderRoute: typeof ProtectedStartupsStartupidImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/message/': {
      id: '/_protected/message/'
      path: '/message'
      fullPath: '/message'
      preLoaderRoute: typeof ProtectedMessageIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/startups/': {
      id: '/_protected/startups/'
      path: '/startups'
      fullPath: '/startups'
      preLoaderRoute: typeof ProtectedStartupsIndexImport
      parentRoute: typeof ProtectedImport
    }
  }
}

// Create and export the route tree

interface ProtectedRouteChildren {
  ProtectedCreatePostRoute: typeof ProtectedCreatePostRoute
  ProtectedCrowdfundingRoute: typeof ProtectedCrowdfundingRoute
  ProtectedHomeRoute: typeof ProtectedHomeRoute
  ProtectedMyStartupsRoute: typeof ProtectedMyStartupsRoute
  ProtectedNetworkRoute: typeof ProtectedNetworkRoute
  ProtectedVoteArenaRoute: typeof ProtectedVoteArenaRoute
  ProtectedMessageUsernameRoute: typeof ProtectedMessageUsernameRoute
  ProtectedProfileUsernameRoute: typeof ProtectedProfileUsernameRoute
  ProtectedStartupEditStartupidRoute: typeof ProtectedStartupEditStartupidRoute
  ProtectedStartupsStartupidRoute: typeof ProtectedStartupsStartupidRoute
  ProtectedMessageIndexRoute: typeof ProtectedMessageIndexRoute
  ProtectedStartupsIndexRoute: typeof ProtectedStartupsIndexRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedCreatePostRoute: ProtectedCreatePostRoute,
  ProtectedCrowdfundingRoute: ProtectedCrowdfundingRoute,
  ProtectedHomeRoute: ProtectedHomeRoute,
  ProtectedMyStartupsRoute: ProtectedMyStartupsRoute,
  ProtectedNetworkRoute: ProtectedNetworkRoute,
  ProtectedVoteArenaRoute: ProtectedVoteArenaRoute,
  ProtectedMessageUsernameRoute: ProtectedMessageUsernameRoute,
  ProtectedProfileUsernameRoute: ProtectedProfileUsernameRoute,
  ProtectedStartupEditStartupidRoute: ProtectedStartupEditStartupidRoute,
  ProtectedStartupsStartupidRoute: ProtectedStartupsStartupidRoute,
  ProtectedMessageIndexRoute: ProtectedMessageIndexRoute,
  ProtectedStartupsIndexRoute: ProtectedStartupsIndexRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

interface OnboardRouteChildren {
  OnboardContactRoute: typeof OnboardContactRoute
  OnboardInterestsRoute: typeof OnboardInterestsRoute
  OnboardLocationRoute: typeof OnboardLocationRoute
  OnboardSkillsRoute: typeof OnboardSkillsRoute
  OnboardUserTypeRoute: typeof OnboardUserTypeRoute
  OnboardUsernameRoute: typeof OnboardUsernameRoute
  OnboardWorkTypeRoute: typeof OnboardWorkTypeRoute
}

const OnboardRouteChildren: OnboardRouteChildren = {
  OnboardContactRoute: OnboardContactRoute,
  OnboardInterestsRoute: OnboardInterestsRoute,
  OnboardLocationRoute: OnboardLocationRoute,
  OnboardSkillsRoute: OnboardSkillsRoute,
  OnboardUserTypeRoute: OnboardUserTypeRoute,
  OnboardUsernameRoute: OnboardUsernameRoute,
  OnboardWorkTypeRoute: OnboardWorkTypeRoute,
}

const OnboardRouteWithChildren =
  OnboardRoute._addFileChildren(OnboardRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof ProtectedRouteWithChildren
  '/onboard': typeof OnboardRouteWithChildren
  '/create-post': typeof ProtectedCreatePostRoute
  '/crowdfunding': typeof ProtectedCrowdfundingRoute
  '/home': typeof ProtectedHomeRoute
  '/my-startups': typeof ProtectedMyStartupsRoute
  '/network': typeof ProtectedNetworkRoute
  '/vote-arena': typeof ProtectedVoteArenaRoute
  '/onboard/contact': typeof OnboardContactRoute
  '/onboard/interests': typeof OnboardInterestsRoute
  '/onboard/location': typeof OnboardLocationRoute
  '/onboard/skills': typeof OnboardSkillsRoute
  '/onboard/user-type': typeof OnboardUserTypeRoute
  '/onboard/username': typeof OnboardUsernameRoute
  '/onboard/work-type': typeof OnboardWorkTypeRoute
  '/message/$username': typeof ProtectedMessageUsernameRoute
  '/profile/$username': typeof ProtectedProfileUsernameRoute
  '/startup-edit/$startupid': typeof ProtectedStartupEditStartupidRoute
  '/startups/$startupid': typeof ProtectedStartupsStartupidRoute
  '/message': typeof ProtectedMessageIndexRoute
  '/startups': typeof ProtectedStartupsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof ProtectedRouteWithChildren
  '/onboard': typeof OnboardRouteWithChildren
  '/create-post': typeof ProtectedCreatePostRoute
  '/crowdfunding': typeof ProtectedCrowdfundingRoute
  '/home': typeof ProtectedHomeRoute
  '/my-startups': typeof ProtectedMyStartupsRoute
  '/network': typeof ProtectedNetworkRoute
  '/vote-arena': typeof ProtectedVoteArenaRoute
  '/onboard/contact': typeof OnboardContactRoute
  '/onboard/interests': typeof OnboardInterestsRoute
  '/onboard/location': typeof OnboardLocationRoute
  '/onboard/skills': typeof OnboardSkillsRoute
  '/onboard/user-type': typeof OnboardUserTypeRoute
  '/onboard/username': typeof OnboardUsernameRoute
  '/onboard/work-type': typeof OnboardWorkTypeRoute
  '/message/$username': typeof ProtectedMessageUsernameRoute
  '/profile/$username': typeof ProtectedProfileUsernameRoute
  '/startup-edit/$startupid': typeof ProtectedStartupEditStartupidRoute
  '/startups/$startupid': typeof ProtectedStartupsStartupidRoute
  '/message': typeof ProtectedMessageIndexRoute
  '/startups': typeof ProtectedStartupsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_onboarding': typeof OnboardingRoute
  '/_protected': typeof ProtectedRouteWithChildren
  '/onboard': typeof OnboardRouteWithChildren
  '/_protected/create-post': typeof ProtectedCreatePostRoute
  '/_protected/crowdfunding': typeof ProtectedCrowdfundingRoute
  '/_protected/home': typeof ProtectedHomeRoute
  '/_protected/my-startups': typeof ProtectedMyStartupsRoute
  '/_protected/network': typeof ProtectedNetworkRoute
  '/_protected/vote-arena': typeof ProtectedVoteArenaRoute
  '/onboard/contact': typeof OnboardContactRoute
  '/onboard/interests': typeof OnboardInterestsRoute
  '/onboard/location': typeof OnboardLocationRoute
  '/onboard/skills': typeof OnboardSkillsRoute
  '/onboard/user-type': typeof OnboardUserTypeRoute
  '/onboard/username': typeof OnboardUsernameRoute
  '/onboard/work-type': typeof OnboardWorkTypeRoute
  '/_protected/message/$username': typeof ProtectedMessageUsernameRoute
  '/_protected/profile/$username': typeof ProtectedProfileUsernameRoute
  '/_protected/startup-edit/$startupid': typeof ProtectedStartupEditStartupidRoute
  '/_protected/startups/$startupid': typeof ProtectedStartupsStartupidRoute
  '/_protected/message/': typeof ProtectedMessageIndexRoute
  '/_protected/startups/': typeof ProtectedStartupsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/onboard'
    | '/create-post'
    | '/crowdfunding'
    | '/home'
    | '/my-startups'
    | '/network'
    | '/vote-arena'
    | '/onboard/contact'
    | '/onboard/interests'
    | '/onboard/location'
    | '/onboard/skills'
    | '/onboard/user-type'
    | '/onboard/username'
    | '/onboard/work-type'
    | '/message/$username'
    | '/profile/$username'
    | '/startup-edit/$startupid'
    | '/startups/$startupid'
    | '/message'
    | '/startups'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/onboard'
    | '/create-post'
    | '/crowdfunding'
    | '/home'
    | '/my-startups'
    | '/network'
    | '/vote-arena'
    | '/onboard/contact'
    | '/onboard/interests'
    | '/onboard/location'
    | '/onboard/skills'
    | '/onboard/user-type'
    | '/onboard/username'
    | '/onboard/work-type'
    | '/message/$username'
    | '/profile/$username'
    | '/startup-edit/$startupid'
    | '/startups/$startupid'
    | '/message'
    | '/startups'
  id:
    | '__root__'
    | '/'
    | '/_onboarding'
    | '/_protected'
    | '/onboard'
    | '/_protected/create-post'
    | '/_protected/crowdfunding'
    | '/_protected/home'
    | '/_protected/my-startups'
    | '/_protected/network'
    | '/_protected/vote-arena'
    | '/onboard/contact'
    | '/onboard/interests'
    | '/onboard/location'
    | '/onboard/skills'
    | '/onboard/user-type'
    | '/onboard/username'
    | '/onboard/work-type'
    | '/_protected/message/$username'
    | '/_protected/profile/$username'
    | '/_protected/startup-edit/$startupid'
    | '/_protected/startups/$startupid'
    | '/_protected/message/'
    | '/_protected/startups/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  OnboardingRoute: typeof OnboardingRoute
  ProtectedRoute: typeof ProtectedRouteWithChildren
  OnboardRoute: typeof OnboardRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  OnboardingRoute: OnboardingRoute,
  ProtectedRoute: ProtectedRouteWithChildren,
  OnboardRoute: OnboardRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_onboarding",
        "/_protected",
        "/onboard"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_onboarding": {
      "filePath": "_onboarding.tsx"
    },
    "/_protected": {
      "filePath": "_protected.tsx",
      "children": [
        "/_protected/create-post",
        "/_protected/crowdfunding",
        "/_protected/home",
        "/_protected/my-startups",
        "/_protected/network",
        "/_protected/vote-arena",
        "/_protected/message/$username",
        "/_protected/profile/$username",
        "/_protected/startup-edit/$startupid",
        "/_protected/startups/$startupid",
        "/_protected/message/",
        "/_protected/startups/"
      ]
    },
    "/onboard": {
      "filePath": "onboard.tsx",
      "children": [
        "/onboard/contact",
        "/onboard/interests",
        "/onboard/location",
        "/onboard/skills",
        "/onboard/user-type",
        "/onboard/username",
        "/onboard/work-type"
      ]
    },
    "/_protected/create-post": {
      "filePath": "_protected/create-post.tsx",
      "parent": "/_protected"
    },
    "/_protected/crowdfunding": {
      "filePath": "_protected/crowdfunding.tsx",
      "parent": "/_protected"
    },
    "/_protected/home": {
      "filePath": "_protected/home.tsx",
      "parent": "/_protected"
    },
    "/_protected/my-startups": {
      "filePath": "_protected/my-startups.tsx",
      "parent": "/_protected"
    },
    "/_protected/network": {
      "filePath": "_protected/network.tsx",
      "parent": "/_protected"
    },
    "/_protected/vote-arena": {
      "filePath": "_protected/vote-arena.tsx",
      "parent": "/_protected"
    },
    "/onboard/contact": {
      "filePath": "onboard/contact.tsx",
      "parent": "/onboard"
    },
    "/onboard/interests": {
      "filePath": "onboard/interests.tsx",
      "parent": "/onboard"
    },
    "/onboard/location": {
      "filePath": "onboard/location.tsx",
      "parent": "/onboard"
    },
    "/onboard/skills": {
      "filePath": "onboard/skills.tsx",
      "parent": "/onboard"
    },
    "/onboard/user-type": {
      "filePath": "onboard/user-type.tsx",
      "parent": "/onboard"
    },
    "/onboard/username": {
      "filePath": "onboard/username.tsx",
      "parent": "/onboard"
    },
    "/onboard/work-type": {
      "filePath": "onboard/work-type.tsx",
      "parent": "/onboard"
    },
    "/_protected/message/$username": {
      "filePath": "_protected/message.$username.tsx",
      "parent": "/_protected"
    },
    "/_protected/profile/$username": {
      "filePath": "_protected/profile.$username.tsx",
      "parent": "/_protected"
    },
    "/_protected/startup-edit/$startupid": {
      "filePath": "_protected/startup-edit.$startupid.tsx",
      "parent": "/_protected"
    },
    "/_protected/startups/$startupid": {
      "filePath": "_protected/startups.$startupid.tsx",
      "parent": "/_protected"
    },
    "/_protected/message/": {
      "filePath": "_protected/message.index.tsx",
      "parent": "/_protected"
    },
    "/_protected/startups/": {
      "filePath": "_protected/startups.index.tsx",
      "parent": "/_protected"
    }
  }
}
ROUTE_MANIFEST_END */
